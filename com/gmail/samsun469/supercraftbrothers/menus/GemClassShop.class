package com.gmail.samsun469.supercraftbrothers.menus;

import com.gmail.samsun469.supercraftbrothers.SCBRank;
import com.gmail.samsun469.supercraftbrothers.SuperCraftBrothers;
import com.gmail.samsun469.supercraftbrothers.managers.ColorManager;
import com.gmail.samsun469.supercraftbrothers.managers.RankManager;
import com.gmail.samsun469.supercraftbrothers.managers.ScoreboardManager;
import com.gmail.samsun469.supercraftbrothers.managers.StatsManager;
import java.util.List;
import org.bukkit.ChatColor;
import org.bukkit.Material;
import org.bukkit.entity.Player;
import org.bukkit.inventory.ItemStack;

public class GemClassShop
{
  public GemClassShopIM gemclassshop;
  public Player p = null;
  
  public GemClassShop(SuperCraftBrothers scb, Player player)
  {
    this.gemclassshop = new GemClassShopIM("§2Character Gem Shop", 27, scb);
    this.p = player;
  }
  
  public String[] descs = new String[7];
  public static int[] prices = { 100, 50, 100, 100, 100, 200, 50 };
  public static String[] classes = { "ButterBro", "Chicken", "Notch", "Ocelot", "Witch", "WitherSkeleton", "Tnt" };
  public static ItemStack[] items = {
    new ItemStack(Material.GOLD_INGOT, 1), 
    new ItemStack(Material.EGG, 1), 
    new ItemStack(Material.GRASS, 1), 
    new ItemStack(Material.MONSTER_EGG, 1, 98), 
    new ItemStack(Material.POTION, 1), 
    new ItemStack(Material.LEATHER_CHESTPLATE, 1), 
    new ItemStack(Material.TNT, 1) };
  
  public void openMenu()
  {
    setupShop(this.p);
    for (int i = 0; i < classes.length; i++) {
      this.gemclassshop.setOption(i, items[i], classes[i], new String[] { this.descs[i] });
    }
    this.gemclassshop.open(this.p);
  }
  
  public void onOptionClick(String c, int s)
  {
    if (this.p.hasPermission("scb.class." + c.toLowerCase()))
    {
      buyClass(this.p, c, prices[s]);
    }
    else
    {
      if (RankManager.getPlayerRank(this.p.getName()).getClasses().contains(c)) {
        return;
      }
      if (!StatsManager.getPlayerClass(this.p.getName(), c)) {
        if (canBuyClass(this.p, c.toLowerCase(), prices[s]))
        {
          buyClass(this.p, c, prices[s]);
          ScoreboardManager.addPlayer(this.p);
        }
      }
    }
    GemClassShopIM.removeFromList(this.p);
  }
  
  public void setupShop(Player p)
  {
    for (int i = 0; i < classes.length; i++) {
      if ((StatsManager.getPlayerClass(p.getName(), classes[i])) || (RankManager.getPlayerRank(p.getName()).getClasses().contains(classes[i]))) {
        this.descs[i] = "§aPurchased!";
      } else {
        this.descs[i] = ("§6Price: §a" + prices[i] + " gems");
      }
    }
  }
  
  public boolean canBuyClass(Player p, String c, int g)
  {
    if (StatsManager.getPlayerGems(p.getName()) >= g) {
      return true;
    }
    p.sendMessage(ChatColor.RED + "You do not have enough Gems to unlock this character");
    return false;
  }
  
  public void buyClass(Player p, String c, int g)
  {
    StatsManager.addPlayerClass(p.getName(), c.toLowerCase());
    StatsManager.setPlayerGems(p.getName(), -g, 1, 0);
    p.sendMessage(ChatColor.GREEN + "You have just bought the " + ColorManager.getName(c));
  }
}
